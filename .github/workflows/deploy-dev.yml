name: Semantic release
on:
  push:
    branches:
      - master
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          cache: 'yarn'
          node-version: '16.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@sesamyab'

      - name: Install dependencies
        run: yarn install --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PACKAGE_READ_TOKEN }}
      
      - name: Set up Git
        run: |
          git config --global user.email "julianidiart1987@hotmail.com"
          git config --global user.name "Juli√°n Idiart"

      - name: Execute version.sh
        run: |
          chmod +x version.sh
          ./version.sh

      - name: Execute changelog.sh
        run: |
          chmod +x changelog.sh
          ./changelog.sh

      - name: Stage Changes
        run: git add .

      - name: Fetch all tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Get latest semantic version tag
        id: latest-tag
        run: |
          LATEST_TAG=$(git tag -l --sort=-v:refname | grep '^[0-9]\+\.[0-9]\+\.[0-9]\+$' | head -n 1)
          echo "Latest tag is $LATEST_TAG"
          echo "::set-output name=tag::$LATEST_TAG"

      - name: Commit Changes
        run: |
          git commit -m "chore(release): publish version ${{ steps.latest-tag.outputs.tag }} in wordpress.org"
          
      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn semantic-release

      - name: Build
        run: yarn run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.S3_BUCKET_REGION }}

      - name: Deploy to S3 bucket
        run: aws s3 sync ./dist s3://${{ secrets.S3_BUCKET }}/scripts/${{ github.event.repository.name }} --delete --cache-control max-age=0